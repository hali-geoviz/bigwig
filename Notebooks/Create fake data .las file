{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "las = lasio.LASFile()\n",
    "\n",
    "from datetime import datetime\n",
    "\n",
    "las.well.DATE = datetime.today().strftime('%Y-%m-%d %H:%M:%S')\n",
    "\n",
    "las.params['ENG'] = lasio.HeaderItem('ENG', value='Sebastian Aegidius')\n",
    "\n",
    "las.params['LMF'] = lasio.HeaderItem('LMF', value='GL')\n",
    "\n",
    "las.other = 'Example of how to create a LAS file from scratch using lasio'\n",
    "\n",
    "############################################################################\n",
    "\n",
    "depths = np.arange(10, 50, 0.5)\n",
    "\n",
    "Gamma_Ray = np.log10(depths)*5+np.random.random(len(depths))\n",
    "\n",
    "Gamma_Ray[:8] = np.nan\n",
    "\n",
    "Deep_Resistivity = np.sin(depths)*10 + np.random.random(len(depths))\n",
    "\n",
    "Deep_Resistivity[:15] = np.nan\n",
    "\n",
    "Medium_Resistivity = np.degrees(depths) + np.random.random(len(depths))\n",
    "\n",
    "Medium_Resistivity[:8] = np.nan\n",
    "\n",
    "Shallow_Resistivity = np.cos(depths)*10 + np.random.random(len(depths))\n",
    "\n",
    "Neutron_Porosity = np.arctan(depths) # + np.random.random(len(depths))\n",
    "\n",
    "Neutron_Porosity[34:56] = np.nan\n",
    "\n",
    "Density = np.cos(depths)*10\n",
    "\n",
    "Sonic_Velocity = np.sin(depths)\n",
    "\n",
    "Caliper = np.tan(depths)\n",
    "\n",
    "Bit_Size = np.arcsinh(depths) + np.random.random(len(depths))\n",
    "\n",
    "############################################################################\n",
    "\n",
    "las.add_curve('DEPT', depths, unit='m', descr= 'Depth')\n",
    "\n",
    "las.add_curve('GR', Gamma_Ray, unit= 'api', descr= 'Gamma Ray')\n",
    "\n",
    "las.add_curve('RD', Deep_Resistivity, unit= 'ohm.m', descr= 'Deep Resistivity')\n",
    "\n",
    "las.add_curve('RM', Medium_Resistivity, unit= 'ohm.m', descr= 'Meduim Resistivity')\n",
    "\n",
    "las.add_curve('RS', Shallow_Resistivity, unit= 'ohm.m', descr= 'Shallow Resistivity')\n",
    "\n",
    "las.add_curve('NPHI', Neutron_Porosity, unit= 'V/V', descr= 'Neutron Porosity')\n",
    "\n",
    "las.add_curve('RHOB', Density, unit= 'g/cm3', descr= 'Density')\n",
    "\n",
    "las.add_curve('DT', Sonic_Velocity, unit= 'ms/ft', descr= 'Sonic Velocity')\n",
    "\n",
    "las.add_curve('CALI', Caliper, unit= 'inches', descr= 'Caliper')\n",
    "\n",
    "las.add_curve('BS', Bit_Size, unit= 'inches', descr= 'Bit Size')\n",
    "\n",
    "############################################################################\n",
    "\n",
    "las.write('bigwig_test_v1.2.las', version = 1.2)\n",
    "\n",
    "las.write('bigwig_test_v2.las', version = 2)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
